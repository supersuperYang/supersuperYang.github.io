(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{599:function(s,a,e){"use strict";e.r(a);var n=e(3),t=Object(n.a)({},(function(){var s=this,a=s.$createElement,e=s._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"title"}),e("h2",{attrs:{id:"前言"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[s._v("#")]),s._v(" 前言")]),s._v(" "),e("h4",{attrs:{id:"leetcode是一个全球极客挚爱的成长平台。地址leetcode官网。里面有很多题目-还有比赛、模拟面试等等。感兴趣的朋友可以去刷刷题-看看。"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leetcode是一个全球极客挚爱的成长平台。地址leetcode官网。里面有很多题目-还有比赛、模拟面试等等。感兴趣的朋友可以去刷刷题-看看。"}},[s._v("#")]),s._v(" Leetcode是一个全球极客挚爱的成长平台。地址"),e("a",{attrs:{href:"https://leetcode-cn.com/",target:"_blank",rel:"noopener noreferrer"}},[s._v("Leetcode官网"),e("OutboundLink")],1),s._v("。里面有很多题目，还有比赛、模拟面试等等。感兴趣的朋友可以去刷刷题，看看。")])]),e("h3",{attrs:{id:"题目-拥有最多糖果的孩子"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#题目-拥有最多糖果的孩子"}},[s._v("#")]),s._v(" 题目： 拥有最多糖果的孩子")]),s._v(" "),e("h4",{attrs:{id:"给你一个数组-candies-和一个整数-extracandies-其中-candies-i-代表第-i-个孩子拥有的糖果数目。对每一个孩子-检查是否存在一种方案-将额外的-extracandies-个糖果分配给孩子们之后-此孩子有-最多-的糖果。注意-允许有多个孩子同时拥有-最多-的糖果数目。"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#给你一个数组-candies-和一个整数-extracandies-其中-candies-i-代表第-i-个孩子拥有的糖果数目。对每一个孩子-检查是否存在一种方案-将额外的-extracandies-个糖果分配给孩子们之后-此孩子有-最多-的糖果。注意-允许有多个孩子同时拥有-最多-的糖果数目。"}},[s._v("#")]),s._v(" 给你一个数组 candies 和一个整数 extraCandies ，其中 candies[i] 代表第 i 个孩子拥有的糖果数目。对每一个孩子，检查是否存在一种方案，将额外的 extraCandies 个糖果分配给孩子们之后，此孩子有 最多 的糖果。注意，允许有多个孩子同时拥有 最多 的糖果数目。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("示例 1:\n输入：candies = [2,3,5,1,3], extraCandies = 3\n输出：[true,true,true,false,true] \n解析: 一共有三种种类的糖果，每一种都有两个。\n  孩子 1 有 2 个糖果，如果他得到所有额外的糖果（3个），那么他总共有 5 个糖果，他将成为拥有最多糖果的孩子。\n  孩子 2 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n  孩子 3 有 5 个糖果，他已经是拥有最多糖果的孩子。\n  孩子 4 有 1 个糖果，即使他得到所有额外的糖果，他也只有 4 个糖果，无法成为拥有糖果最多的孩子。\n  孩子 5 有 3 个糖果，如果他得到至少 2 个额外糖果，那么他将成为拥有最多糖果的孩子。\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("示例 2 :\n输入:candies = [4,2,1,1,2], extraCandies = 1\n输出: [true,false,false,false,false] \n解析:只有 1 个额外糖果，所以不管额外糖果给谁，只有孩子 1 可以成为拥有糖果最多的孩子。\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("示例 3 :\n输入:candies = [12,1,12], extraCandies = 10\n输出: [true,false,true] \n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("h4",{attrs:{id:"方法1"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#方法1"}},[s._v("#")]),s._v(" 方法1：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("  var kidsWithCandies = function(candies, extraCandies) {\n    \x3c!-- 先获取最大值 --\x3e\n    var maxNums = Math.max(...candies);\n    \x3c!-- 创建一个新数组 --\x3e\n    var arr = [];\n    // for循环原数组判断每个值和额外的糖果相加是否大于等于最大值\n    // 如果是就push进入空数组true\n    // 如果不是就Push进false\n    for(var i = 0; i < candies.length; i++) {\n      let num = candies[i] + extraCandies;\n      if (num >= max) {\n        app.push(true);\n      } else {\n        app.push(false);\n      }\n    }\n    return arr;\n  }\n  kidsWithCandies([1, 10, 10, 3], 1);\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br")])])])}),[],!1,null,null,null);a.default=t.exports}}]);