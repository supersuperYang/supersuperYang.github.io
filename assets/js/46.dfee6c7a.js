(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{562:function(s,e,a){"use strict";a.r(e);var t=a(3),n=Object(t.a)({},(function(){var s=this,e=s.$createElement,a=s._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"title"}),a("h2",{attrs:{id:"前言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[s._v("#")]),s._v(" 前言")]),s._v(" "),a("h4",{attrs:{id:"公司接口都是后台java提供的-俺直接调用就行。但是对node-js神往已久-有个前同事离职后-去了新公司就有用到node-js-感觉很不错阿。突然觉得自己又学的动了。还是先了解下"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#公司接口都是后台java提供的-俺直接调用就行。但是对node-js神往已久-有个前同事离职后-去了新公司就有用到node-js-感觉很不错阿。突然觉得自己又学的动了。还是先了解下"}},[s._v("#")]),s._v(" 公司接口都是后台java提供的，俺直接调用就行。但是对node.js神往已久，有个前同事离职后，去了新公司就有用到node.js，感觉很不错阿。突然觉得自己又学的动了。还是先了解下")])]),a("h4",{attrs:{id:"一旦你已经安装了-node-让我们尝试构建第一个-web-服务器。-请创建一个-app-js-文件-粘贴以下代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一旦你已经安装了-node-让我们尝试构建第一个-web-服务器。-请创建一个-app-js-文件-粘贴以下代码"}},[s._v("#")]),s._v(" 一旦你已经安装了 Node，让我们尝试构建第一个 Web 服务器。 请创建一个“app.js”文件，粘贴以下代码：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("const http = require('http');\n\nconst hostname = '127.0.0.1';\nconst port = 3000;\n\nconst server = http.createServer((req, res) => {\n  res.statusCode = 200;\n  res.setHeader('Content-Type', 'text/plain');\n  res.end('my name's yql');\n});\n\nserver.listen(port, hostname, () => {\n  console.log(`Server running at http://${hostname}:${port}/`);\n});\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("p",[s._v("然后使用 node app.js 运行程序，访问 http://localhost:3000，你就会看到一个消息，写着“my name's yql”。")]),s._v(" "),a("h2",{attrs:{id:"什么是node"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是node"}},[s._v("#")]),s._v(" 什么是node")]),s._v(" "),a("p",[s._v("Node.js是一个基于Chrome v8引擎的JavaScript运行环境。一个让JavaScript运行在服务端的开发平台。Node可以像游览器一样去解析和执行JavaScript代码"),a("br"),s._v("\nNode.js应用程序在单个进程中运行，而无需为每个请求创建一个新线程。Node.js在其标准库中提供了一组异步I / O原语，以防止JavaScript代码被阻塞，并且通常，Node.js中的库是使用非阻塞范式编写的，从而使阻塞行为成为例外而不是规范。")]),s._v(" "),a("p",[s._v("当Node.js执行I / O操作（例如从网络读取，访问数据库或文件系统）而不是阻塞线程并浪费CPU周期等待时，Node.js将在响应返回时恢复操作。")]),s._v(" "),a("p",[s._v("这使Node.js可以在一台服务器上处理数千个并发连接，而​​不会带来管理线程并发的负担，而线程并发的负担可能是漏洞的重要来源。")]),s._v(" "),a("p",[s._v("Node.js具有独特的优势，因为成千上万的为浏览器编写JavaScript的前端开发人员现在可以编写除客户端代码之外的服务器端代码，而无需学习完全不同的语言。")]),s._v(" "),a("p",[s._v("在Node.js中，可以毫无问题地使用新的ECMAScript标准，因为您不必等待所有用户更新其浏览器-您可以通过更改Node.js版本来决定要使用哪个ECMAScript版本，并且还可以通过运行带有标志的Node.js来启用特定的实验功能。")]),s._v(" "),a("h4",{attrs:{id:"以下概念也是理解异步编程的关键-异步编程是node-js的基本组成部分"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#以下概念也是理解异步编程的关键-异步编程是node-js的基本组成部分"}},[s._v("#")]),s._v(" 以下概念也是理解异步编程的关键，异步编程是Node.js的基本组成部分：")]),s._v(" "),a("ul",[a("li",[s._v("异步编程和回调")]),s._v(" "),a("li",[s._v("计时器")]),s._v(" "),a("li",[s._v("承诺")]),s._v(" "),a("li",[s._v("异步并等待")]),s._v(" "),a("li",[s._v("闭包")]),s._v(" "),a("li",[s._v("事件循环")])]),s._v(" "),a("h2",{attrs:{id:"node优缺点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#node优缺点"}},[s._v("#")]),s._v(" node优缺点")]),s._v(" "),a("p",[s._v("优点"),a("br"),s._v("\n1.处理高并发场景性能更高"),a("br"),s._v("\n2.函数式编程非常适合写异步回调链"),a("br"),s._v("\n缺点"),a("br"),s._v("\n不适合cpu密集应用。如果有长时间运行的计算，将会导致cpu时间片不能释放，使后续I/O无发发起。")]),s._v(" "),a("h2",{attrs:{id:"node适用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#node适用场景"}},[s._v("#")]),s._v(" node适用场景")]),s._v(" "),a("p",[s._v("高并发、聊天、实时消息推送")])])}),[],!1,null,null,null);e.default=n.exports}}]);