(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{554:function(s,a,t){"use strict";t.r(a);var r=t(3),e=Object(r.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"title"}),t("h2",{attrs:{id:"前言"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[s._v("#")]),s._v(" 前言")]),s._v(" "),t("h4",{attrs:{id:"今天是2020年第一天。祝大家新年快乐-生活棒棒棒-工资涨涨涨。"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#今天是2020年第一天。祝大家新年快乐-生活棒棒棒-工资涨涨涨。"}},[s._v("#")]),s._v(" 今天是2020年第一天。祝大家新年快乐，生活棒棒棒，工资涨涨涨。")]),s._v(" "),t("h4",{attrs:{id:"这一章主要是做一下css内容的大纲。第一篇和往常一样-讲的还是历史发展。"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#这一章主要是做一下css内容的大纲。第一篇和往常一样-讲的还是历史发展。"}},[s._v("#")]),s._v(" 这一章主要是做一下CSS内容的大纲。第一篇和往常一样，讲的还是历史发展。")]),s._v(" "),t("h4",{attrs:{id:"都说css是页面的美容师-随着前端的发展-页面的内容已经不仅仅停留在一些简单的文档信息和表单了-现在已经可以使用各种动画以及各种监听自适应效果了-css在平时的使用中也是知道如何使用并且处理异常-解决兼容-接下来-把这些东西系统的进行归类学习。"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#都说css是页面的美容师-随着前端的发展-页面的内容已经不仅仅停留在一些简单的文档信息和表单了-现在已经可以使用各种动画以及各种监听自适应效果了-css在平时的使用中也是知道如何使用并且处理异常-解决兼容-接下来-把这些东西系统的进行归类学习。"}},[s._v("#")]),s._v(" 都说css是页面的美容师，随着前端的发展，页面的内容已经不仅仅停留在一些简单的文档信息和表单了，现在已经可以使用各种动画以及各种监听自适应效果了，css在平时的使用中也是知道如何使用并且处理异常，解决兼容，接下来，把这些东西系统的进行归类学习。")])]),t("h2",{attrs:{id:"什么是css"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是css"}},[s._v("#")]),s._v(" 什么是CSS")]),s._v(" "),t("h4",{attrs:{id:"css-全称cascading-style-sheets-层叠样式表-那么解释什么是css-就是说明什么是层叠-什么是样式表。"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#css-全称cascading-style-sheets-层叠样式表-那么解释什么是css-就是说明什么是层叠-什么是样式表。"}},[s._v("#")]),s._v(" CSS，全称Cascading Style Sheets，层叠样式表，那么解释什么是CSS，就是说明什么是层叠，什么是样式表。")]),s._v(" "),t("p",[s._v("1.什么是层叠？\n层叠的最终结果有点像是不同颜色的水彩笔在同一个区域按顺序画画一样。到了页面中，一个页面有多个样式来源。有元素的内联样式，以及style标签的内部样式、写在CSS文件中的样式、游览器用户自定义样式，游览器默认样式，这些样式可以定义同一个元素，最终会按照统一样式取优先级得方式来渲染。这种对多个样式来源进行叠加，最终确定结果得过程就是层叠。\n2.什么是样式表？\n样式表是一种将网页得内容和表示分离得网页设计形式，我们在HTML中也可以通过内联样式和style标签来定义元素得样式，但是这样一来代码臃肿，不利于维护。利用样式表去处理样式，HTML处理语义和结构，实现关注点分离。这也是CSS得主要目的之一。")]),s._v(" "),t("h2",{attrs:{id:"css的历史"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#css的历史"}},[s._v("#")]),s._v(" CSS的历史")]),s._v(" "),t("h4",{attrs:{id:"css的使用就是为了标记语言的展示效果-两者的发展息息相关。"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#css的使用就是为了标记语言的展示效果-两者的发展息息相关。"}},[s._v("#")]),s._v(" CSS的使用就是为了标记语言的展示效果，两者的发展息息相关。")]),s._v(" "),t("h4",{attrs:{id:"在html刚出世不久-它的能力只是规定了网页中的标题、段落应该使用的标签-但是没有涉及这些内容应该以何种样式-比如大小、位置、间距、缩进等属性-呈现在游览器中。因此-从1990年初-样式表九一各种形式出现了。不同的游览器结合了它们各自的样式语言-读者-也就是游览器网页的用户-可以使用这些样式语言来调节网页的显示方式。一开始样式表时给读者用的-最初的html版本只含有很少的显示属性-读者来决定网页应该怎么样被显示。"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#在html刚出世不久-它的能力只是规定了网页中的标题、段落应该使用的标签-但是没有涉及这些内容应该以何种样式-比如大小、位置、间距、缩进等属性-呈现在游览器中。因此-从1990年初-样式表九一各种形式出现了。不同的游览器结合了它们各自的样式语言-读者-也就是游览器网页的用户-可以使用这些样式语言来调节网页的显示方式。一开始样式表时给读者用的-最初的html版本只含有很少的显示属性-读者来决定网页应该怎么样被显示。"}},[s._v("#")]),s._v(" 在HTML刚出世不久，它的能力只是规定了网页中的标题、段落应该使用的标签，但是没有涉及这些内容应该以何种样式(比如大小、位置、间距、缩进等属性)呈现在游览器中。因此，从1990年初，样式表九一各种形式出现了。不同的游览器结合了它们各自的样式语言，读者(也就是游览器网页的用户)可以使用这些样式语言来调节网页的显示方式。一开始样式表时给读者用的，最初的HTML版本只含有很少的显示属性，读者来决定网页应该怎么样被显示。")]),s._v(" "),t("h4",{attrs:{id:"到了1993年-robert-raisch提出了一种名为-rrp-的样式规则建议。但是这个rrp只允许网页使用1个样式表-不像现在的css能支持加载多个。不久后出现的mosaic游览器就采用增加新种类的html标签实现样式的表达。"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#到了1993年-robert-raisch提出了一种名为-rrp-的样式规则建议。但是这个rrp只允许网页使用1个样式表-不像现在的css能支持加载多个。不久后出现的mosaic游览器就采用增加新种类的html标签实现样式的表达。"}},[s._v("#")]),s._v(" 到了1993年，Robert Raisch提出了一种名为“RRP”的样式规则建议。但是这个RRp只允许网页使用1个样式表，不像现在的CSS能支持加载多个。不久后出现的Mosaic游览器就采用增加新种类的HTML标签实现样式的表达。")]),s._v(" "),t("h4",{attrs:{id:"后来-台湾人魏培源开发的violawww游览器使用了一种规则具有层次嵌套性的样式表-并第一个支持通过标签引用外部样式表。fosi最早支持以相对尺寸值来表示字体大小。函数式风格的dsssl语言支持在样式表中进行定义变量、继承变量、定义函数等功能-但是语法复杂。"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#后来-台湾人魏培源开发的violawww游览器使用了一种规则具有层次嵌套性的样式表-并第一个支持通过标签引用外部样式表。fosi最早支持以相对尺寸值来表示字体大小。函数式风格的dsssl语言支持在样式表中进行定义变量、继承变量、定义函数等功能-但是语法复杂。"}},[s._v("#")]),s._v(" 后来，台湾人魏培源开发的ViolaWWW游览器使用了一种规则具有层次嵌套性的样式表，并第一个支持通过"),t("link"),s._v("标签引用外部样式表。FOSI最早支持以相对尺寸值来表示字体大小。函数式风格的DSSSL语言支持在样式表中进行定义变量、继承变量、定义函数等功能，但是语法复杂。")]),s._v(" "),t("h4",{attrs:{id:"_1994年万维网联盟-w3c-创建-哈肯·维姆·莱-hakon-wium-lie-提出了css的最初建议。伯特·波斯-gijsbert-bert-bos-当时正在设计一个叫做argo的游览器-他们决定一起合作设计css。当时已经有过一些样式表语言的建议了-但是css是第一个含有-层叠-的主意的。这种层叠的方式使作者和读者都可以灵活地加入自己的设计-混合各人的爱好。"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1994年万维网联盟-w3c-创建-哈肯·维姆·莱-hakon-wium-lie-提出了css的最初建议。伯特·波斯-gijsbert-bert-bos-当时正在设计一个叫做argo的游览器-他们决定一起合作设计css。当时已经有过一些样式表语言的建议了-但是css是第一个含有-层叠-的主意的。这种层叠的方式使作者和读者都可以灵活地加入自己的设计-混合各人的爱好。"}},[s._v("#")]),s._v(" 1994年万维网联盟(W3C)创建，哈肯·维姆·莱(Hakon Wium Lie)提出了CSS的最初建议。伯特·波斯(Gijsbert (Bert) Bos)当时正在设计一个叫做Argo的游览器，他们决定一起合作设计CSS。当时已经有过一些样式表语言的建议了，但是CSS是第一个含有“层叠”的主意的。这种层叠的方式使作者和读者都可以灵活地加入自己的设计，混合各人的爱好。")]),s._v(" "),t("h4",{attrs:{id:"_1996年12月-哈肯·莱与伯特·波斯发布了css规范的第1个版本。但是由于当时已有的主流游览器的内核完全不适合解析css的语法-加上早年设计师滥用html标签来表达样式导致css在几年后才流行起来。而后微软的ie游览器走在了逐步实现css第1版本标准的前列。但是因为不重视问题修补-导致遗留bug很多-这也使得ie游览器长期为人们诟病。"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1996年12月-哈肯·莱与伯特·波斯发布了css规范的第1个版本。但是由于当时已有的主流游览器的内核完全不适合解析css的语法-加上早年设计师滥用html标签来表达样式导致css在几年后才流行起来。而后微软的ie游览器走在了逐步实现css第1版本标准的前列。但是因为不重视问题修补-导致遗留bug很多-这也使得ie游览器长期为人们诟病。"}},[s._v("#")]),s._v(" 1996年12月，哈肯·莱与伯特·波斯发布了CSS规范的第1个版本。但是由于当时已有的主流游览器的内核完全不适合解析CSS的语法，加上早年设计师滥用HTML标签来表达样式导致CSS在几年后才流行起来。而后微软的IE游览器走在了逐步实现CSS第1版本标准的前列。但是因为不重视问题修补，导致遗留Bug很多，这也使得IE游览器长期为人们诟病。")]),s._v(" "),t("h4",{attrs:{id:"_1997年初-w3c组织了专门管css的工作组-其负责人使克里斯·里雷。这个工作组开始讨论第1版中没有涉及到的问题-在1998年5月出版了第2版规则。并且网页标准计划的7位成员成立了-css武士团-css-samurai-指出opera游览器和ie游览器在支持css方面存在的诸多问题。opera公司着手解决了问题-但微软并未解决。网页标准计划也积极劝说网景公司和macromedia公司分别改进其产品对css标准的支持。"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1997年初-w3c组织了专门管css的工作组-其负责人使克里斯·里雷。这个工作组开始讨论第1版中没有涉及到的问题-在1998年5月出版了第2版规则。并且网页标准计划的7位成员成立了-css武士团-css-samurai-指出opera游览器和ie游览器在支持css方面存在的诸多问题。opera公司着手解决了问题-但微软并未解决。网页标准计划也积极劝说网景公司和macromedia公司分别改进其产品对css标准的支持。"}},[s._v("#")]),s._v(" 1997年初，W3C组织了专门管CSS的工作组，其负责人使克里斯·里雷。这个工作组开始讨论第1版中没有涉及到的问题，在1998年5月出版了第2版规则。并且网页标准计划的7位成员成立了“CSS武士团”（CSS Samurai），指出Opera游览器和IE游览器在支持CSS方面存在的诸多问题。Opera公司着手解决了问题，但微软并未解决。网页标准计划也积极劝说网景公司和Macromedia公司分别改进其产品对CSS标准的支持。")]),s._v(" "),t("h4",{attrs:{id:"_2003年-dave-shea推出了一个名为-css禅意花园-css-zen-garden-的站点-励设计师采用基本的html页面-并仅使用css进行不同的布局。该站点成为了最新提示和技巧的展示-并且在说服人们制定标准的道路上走了很长一段路。"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2003年-dave-shea推出了一个名为-css禅意花园-css-zen-garden-的站点-励设计师采用基本的html页面-并仅使用css进行不同的布局。该站点成为了最新提示和技巧的展示-并且在说服人们制定标准的道路上走了很长一段路。"}},[s._v("#")]),s._v(" 2003年，Dave Shea推出了一个名为“CSS禅意花园”(“CSS Zen Garden”)的站点，励设计师采用基本的HTML页面，并仅使用CSS进行不同的布局。该站点成为了最新提示和技巧的展示，并且在说服人们制定标准的道路上走了很长一段路。")]),s._v(" "),t("h4",{attrs:{id:"随着css和计算机软硬件技术都取得了跨越式的发展-这也对web的表现力提出了更高的要求-更华丽的设计方案和更复杂的交互方式的出现-让css显得有些力不从心。为此-css3应运而生。-w3c在2001年就着手开发css3的规范-与之前的css规范研发模式不同-css3规范被划分为一个个独立的模块。这样浏览器厂商可以有选择的先支持部分css3模块-从而利于css3的推广。"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#随着css和计算机软硬件技术都取得了跨越式的发展-这也对web的表现力提出了更高的要求-更华丽的设计方案和更复杂的交互方式的出现-让css显得有些力不从心。为此-css3应运而生。-w3c在2001年就着手开发css3的规范-与之前的css规范研发模式不同-css3规范被划分为一个个独立的模块。这样浏览器厂商可以有选择的先支持部分css3模块-从而利于css3的推广。"}},[s._v("#")]),s._v(" 随着CSS和计算机软硬件技术都取得了跨越式的发展，这也对web的表现力提出了更高的要求，更华丽的设计方案和更复杂的交互方式的出现，让CSS显得有些力不从心。为此，CSS3应运而生。 W3C在2001年就着手开发CSS3的规范，与之前的CSS规范研发模式不同，CSS3规范被划分为一个个独立的模块。这样浏览器厂商可以有选择的先支持部分CSS3模块，从而利于CSS3的推广。")]),s._v(" "),t("h4",{attrs:{id:"css3新增了很多神奇的功能-border-radius-、-text-shadow-、-transform-以及-transition-、动画-animation-及立体-preserved-3d-等-每一项都会让页面带来不可思议的展示或交互效果。但因为不同浏览器在不同时间支持不同特性-这也让跨浏览器开发变得复杂。"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#css3新增了很多神奇的功能-border-radius-、-text-shadow-、-transform-以及-transition-、动画-animation-及立体-preserved-3d-等-每一项都会让页面带来不可思议的展示或交互效果。但因为不同浏览器在不同时间支持不同特性-这也让跨浏览器开发变得复杂。"}},[s._v("#")]),s._v(" CSS3新增了很多神奇的功能，“border-radius”、“text-shadow”、“transform”以及“transition”、动画（animation）及立体（preserved-3d）等，每一项都会让页面带来不可思议的展示或交互效果。但因为不同浏览器在不同时间支持不同特性，这也让跨浏览器开发变得复杂。")]),s._v(" "),t("h4",{attrs:{id:"从形式上来说-css3-标准自身已经不存在了。每个模块都被独立的标准化-现在标准-css-包括了修订后的-css2-1-以及完整模块对它的扩充-模块的-level-级别-数并不一致。"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#从形式上来说-css3-标准自身已经不存在了。每个模块都被独立的标准化-现在标准-css-包括了修订后的-css2-1-以及完整模块对它的扩充-模块的-level-级别-数并不一致。"}},[s._v("#")]),s._v(" 从形式上来说，CSS3 标准自身已经不存在了。每个模块都被独立的标准化，现在标准 CSS 包括了修订后的 CSS2.1 以及完整模块对它的扩充，模块的 level（级别）数并不一致。")]),s._v(" "),t("h4",{attrs:{id:"css不断的强大-需求也在不断的提高-浏览器对标准的实现不同-逐渐为我们带来新的功能时也增加了工作的难度。"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#css不断的强大-需求也在不断的提高-浏览器对标准的实现不同-逐渐为我们带来新的功能时也增加了工作的难度。"}},[s._v("#")]),s._v(" CSS不断的强大，需求也在不断的提高，浏览器对标准的实现不同，逐渐为我们带来新的功能时也增加了工作的难度。")]),s._v(" "),t("h2",{attrs:{id:"css学习大纲"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#css学习大纲"}},[s._v("#")]),s._v(" CSS学习大纲")]),s._v(" "),t("h4",{attrs:{id:"css的学习是按照功能和语言进行-语言主要是它的语法结构-比如-rule、选择器、单位等等。功能大致可以分为布局、绘制和交互类。"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#css的学习是按照功能和语言进行-语言主要是它的语法结构-比如-rule、选择器、单位等等。功能大致可以分为布局、绘制和交互类。"}},[s._v("#")]),s._v(" CSS的学习是按照功能和语言进行，语言主要是它的语法结构，比如 @rule、选择器、单位等等。功能大致可以分为布局、绘制和交互类。")]),s._v(" "),t("h4",{attrs:{id:"在布局类我们介绍两个最常用的布局-正常流和弹性布局。绘制类则分成图形相关的和文字相关的绘制。最后还有动画和其它交互。"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#在布局类我们介绍两个最常用的布局-正常流和弹性布局。绘制类则分成图形相关的和文字相关的绘制。最后还有动画和其它交互。"}},[s._v("#")]),s._v(" 在布局类我们介绍两个最常用的布局：正常流和弹性布局。绘制类则分成图形相关的和文字相关的绘制。最后还有动画和其它交互。")]),s._v(" "),t("p",[t("img",{attrs:{src:"CSS-study-xml.png",alt:"CSS-study-xml"}})])])}),[],!1,null,null,null);a.default=e.exports}}]);